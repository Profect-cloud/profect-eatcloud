plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'groovy'
}

group = 'profect'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	// Netty DNS 리졸버 의존성 제외
	all {
		exclude group: 'io.netty', module: 'netty-resolver-dns-native-macos'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 1. Spring 핵심 기능 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 MVC, REST API 개발을 위한 기본 설정 (Tomcat 포함)
	implementation 'org.springframework.boot:spring-boot-starter-validation' // @Valid 등 Bean Validation 지원

	// 2. Spring Security 관련
	implementation 'org.springframework.boot:spring-boot-starter-security' // 스프링 시큐리티 기본 설정 (인증/인가)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // Google, Kakao 등 OAuth2 로그인 클라이언트용

	// 2-1. JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.security:spring-security-crypto' // PasswordEncoder 관련

	// 3. Spring Data JPA + DB 관련
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA ORM, Hibernate 사용
	runtimeOnly 'com.mysql:mysql-connector-j' // MySQL 연결 드라이버 (JDBC)

	// 4. Lombok (코드 간결화)
	compileOnly 'org.projectlombok:lombok' // 빌드 시 @Getter, @Builder 등 Lombok 애노테이션 지원
	annotationProcessor 'org.projectlombok:lombok' // 컴파일 시 Lombok 코드 생성 처리
	//compileOnly 'org.project lombok:lombok:1.18.32'
	//annotationProcessor 'org.project lombok:lombok:1.18.32'

	// 5. 테스트용 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit5 + Mockito 포함된 스프링 테스트 설정
	testImplementation 'org.springframework.security:spring-security-test' // 시큐리티 테스트 (Mock 인증 등 지원)
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 플랫폼 런처
	testImplementation 'org.spockframework:spock-spring:2.3-groovy-4.0'
	testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'

	// 5-1. Spock 테스트 프레임워크
	testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
	testImplementation 'org.spockframework:spock-spring:2.3-groovy-4.0'
	testImplementation 'org.apache.groovy:groovy:4.0.17'

	// 5-2. 테스트용 H2 데이터베이스
	testRuntimeOnly 'com.h2database:h2'

	// spock
	testImplementation('org.spockframework:spock-core:2.1-groovy-3.0')
	testImplementation('org.spockframework:spock-spring:2.1-groovy-3.0')

	// 6. email 보내기 의존성
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// 7. Amazon S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'software.amazon.awssdk:s3:2.20.67'

	// 8. Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	// 9. WebSocket-STOMP 방식의 채팅구현
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework:spring-messaging'

	// 10. 시간예약 quartz
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// 11. // AWS SDK v2 : NCP 도 AWS SDK로 api를 호출하게 한다.
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'software.amazon.awssdk:s3:2.20.67'

	// 12. Redis 캐싱
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

sourceSets {
	test {
		groovy {
			srcDirs = ['src/test/java', 'src/test/groovy']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// JVM 옵션 설정 (Netty DNS 리졸버 경고 억제)
tasks.named('bootRun') {
	jvmArgs = [
		'-Dio.netty.resolver.dns.DnsServerAddressStreamProviders.suppressUnsafeWarning=true',
		'-Dio.netty.noUnsafe=true',
		'-Dio.netty.noJdkZlibDecoder=true'
	]
}
